type Txn {
  oid: ID!
  hash: String! @id
  value: Int64 @search
  fee: Int64 @search
  blockNumber: Int64 @search
  block: Block @hasInverse(field: transactions)
  to: Account @hasInverse(field: incoming)
  from: Account @hasInverse(field: outgoing)
}

type Account {
  oid: ID!
  address: String! @id
  incoming: [Txn]
  outgoing: [Txn]
}

type AccountBal @remote {
  address: String
  value: Int64
}

type Block {
  number: Int64 @id
  transactions: [Txn]
}

type Query {
  accountBalance(address: String!, blockNumber: Int64): AccountBal @lambda
  test: String @lambda
  latestBlock: Int64 @lambda
}
